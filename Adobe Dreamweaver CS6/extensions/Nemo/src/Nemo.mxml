<?xml version="1.0" encoding="utf-8"?>
<csxs:CSExtension xmlns:fx="http://ns.adobe.com/mxml/2009"
				  xmlns:s="library://ns.adobe.com/flex/spark"
				  xmlns:mx="library://ns.adobe.com/flex/mx"
				  xmlns:csxs="com.adobe.csxs.core.*"
				  width="232" height="400" applicationComplete="appComplete()"
				  backgroundColor="#bdbdbd" color="#000000" preloaderChromeColor="#d6d6d6"
				  minWidth="232" maxWidth="300" minHeight="400" maxHeight="800"
				  status="Starting">
	<csxs:layout>
		<s:VerticalLayout horizontalAlign="left" paddingBottom="4" paddingLeft="4" paddingRight="4"
						  paddingTop="4"/>
	</csxs:layout>
	<fx:Style source="Nemo.css"/>
	<fx:Script>
		<![CDATA[
			import com.adobe.csxs.core.CSExtension;
			
			import flash.display.InteractiveObject;
			
			import mx.events.FlexNativeWindowBoundsEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ItemClickEvent;
			
			import spark.events.IndexChangeEvent;	
			
			var animationInited:Boolean = false;
			var statusIsOpen:Boolean = false;
			
			public function appComplete():void{
				NemoJSX.initNemo(this, nrSlides, staySt, slideContainer, animationContainer);
				
				//this.status = "Ready";
				NemoJSX.addToLog("Ready");
				this.statusText.maxDisplayedLines = 1;
				
				this.statusText.addEventListener(MouseEvent.CLICK, toggleLog);
				
				this.addEventListener(mx.events.FlexNativeWindowBoundsEvent.WINDOW_RESIZE, onResize);
				//mainTabs.addEventListener(mx.events.change, onResizeHack);
				myViewStack.addEventListener(mx.events.IndexChangedEvent.CHANGE, onResizeHack);
				onResize(null); //initial resize				
				
				
				
				var myContextMenu:ContextMenu = new ContextMenu();
				
				var item:ContextMenuItem = new ContextMenuItem("delete");
				myContextMenu.customItems.push(item);
				item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, menuItemSelectHandler2);
				
				slideContainer.contextMenu = myContextMenu;
				
				//this.addEventListener(MouseEvent.RIGHT_MOUSE_DOWN, handleRightClick);
				
			}
			
			public function toggleLog(e:Event): void 
			{
				if(statusIsOpen) {
					this.statusText.height = 5;
					this.statusText.maxDisplayedLines = 1;
					statusIsOpen = false;
				} else {
					this.statusText.percentHeight = 100;
					this.statusText.maxDisplayedLines = 30;
					statusIsOpen = true;
				}
				NemoJSX.updateStatus(statusIsOpen);
				
			}
			
			private function animationInit():void
			{
				if(animationInited) return;
				animationInited = true;
				NemoJSX.setAnimationContainer(animationContainer);
				//animationContainer.addEventListener(ItemClickEvent.ITEM_CLICK, NemoJSX.updateAnimation);
			}
			
			private function handleRightClick(e:MouseEvent):void
			{
				NemoJSX.addToLog("Right Click Success!");
				var event:MouseEvent = new MouseEvent(
					MouseEvent.MOUSE_DOWN,true,false,mouseX,mouseY,
					e.target as InteractiveObject);
				slideContainer.dispatchEvent(event);
			}
			
			
			private function menuItemSelectHandler2(event:ContextMenuEvent):void {
				NemoJSX.addToLog("menuItemSelectHandler: " + slideContainer.selectedIndex);
				NemoJSX.removeSlide(slideContainer.selectedIndex);				
			}			
			
			private function onResizeHack(e:Event): void {				
				onResize();
				animationInit();
			}
			
			private function onResize(e:FlexNativeWindowBoundsEvent = null):void {
				var w:int;
				var h:int;
				if(e) {
					w = e.afterBounds.width;
					h = e.afterBounds.height;
				}else{
					w = 232;
					h = 400;
				}
				
				NemoJSX.addToLog("resize: " + w + ", " + h + " tab: " + mainTabs.selectedIndex);
				
				//resize content
				if(mainTabs.selectedIndex == 0) {
					mainVGroup.setActualSize(w-8, h-32);
					//make list as big as possible
					slideContainerH.height = h-(slideContainer.y+126+90+25);
					slideContainer.height = h-(slideContainer.y+126+90+25);
					slideContainer.width = w-8;
					//resize prev and next buttons
					next.width = w/2-7;
					prev.width = w/2-7;
					addASileButton.width = w-8;
					commentSlideButton.width = w-8;
				} else
				if(mainTabs.selectedIndex == 1) {
					animationContainer.height = h-50-67;
				}
			}
		]]>
	</fx:Script>
	<!-- Create a Spark ButtonBar control to navigate the ViewStack container. -->
	<s:ButtonBar id="mainTabs" width="100%" height="20" dataProvider="{myViewStack}"/>

	<!-- Define the ViewStack and the two child containers. -->
	<mx:ViewStack id="myViewStack" width="100%" height="380" borderStyle="solid">		
		
		<!-- nemo tab -->
		<s:NavigatorContent id="nemo" label="Slides">
			<s:VGroup id="mainVGroup" x="0" y="0" width="224" horizontalAlign="justify" verticalAlign="top">
				<s:HGroup height="25">
					<s:Label width="70" height="25" text="Stay:" verticalAlign="middle"/>
					<s:NumericStepper id="staySt" width="50" height="25" change="NemoJSX.changeStay(event)"
									  maximum="9001" minimum="0" stepSize="1"/>
				</s:HGroup>
				<s:HGroup height="25">
					<s:Label width="70" height="25" text="Total slides:" verticalAlign="middle"/>
					<s:NumericStepper id="nrSlides" width="50" height="25" maximum="256" minimum="1"/>
					<s:Button width="52" height="25" label="Apply" click="NemoJSX.applySlideTotal(event)"/>
				</s:HGroup>
				<s:HGroup height="25">
					<s:Button id="commentSlideButton" height="25" label="Go to Comment Slide"
							  click="NemoJSX.selectCommentSlide(event)"/>
				</s:HGroup>
				<s:HGroup id="slideContainerH" height="196" requestedColumnCount="1">
					<s:List id="slideContainer" height="196" change="NemoJSX.selectSlide(event)"
							dragComplete="NemoJSX.listDragComplete(event)" dragEnabled="true"
							dragMoveEnabled="true" dropEnabled="true"
							itemRenderer="SlidesListRenderer">
						<s:dataProvider>
							<s:ArrayCollection>
								
							</s:ArrayCollection>
						</s:dataProvider>
					</s:List>
				</s:HGroup>
				<s:HGroup height="25" requestedColumnCount="1">
					<s:Button id="addASileButton" height="25" label="Add a Slide"
							  click="NemoJSX.addASlide(event)"/>
				</s:HGroup>
				<s:HGroup height="50" gap="6">
					<s:Button id="prev" width="100" height="50" label="prev" click="NemoJSX.prevSlide(event)"/>
					<s:Button id="next" width="100" height="50" label="next"
							  click="NemoJSX.nextSlide(event)" />
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
		
		<!-- aniamtion tab -->
		<s:NavigatorContent id="animation" label="Animation">
			<s:VGroup id="aniamtionVGroup" x="0" y="0" width="100%" horizontalAlign="justify"
					  verticalAlign="top">
				<s:List id="animationContainer" width="100%" height="485" borderVisible="true"
						itemRenderer="AnimationListRenderer">
					<s:dataProvider>
						<s:ArrayCollection>
							
						</s:ArrayCollection>
					</s:dataProvider>
				</s:List>
				<s:Button id="assignAniamtionButton" width="100%" height="25" label="Assign animation" click="NemoJSX.assignAnimation(event)"/>
				<s:Button id="addAniamtionButton" width="100%" height="25" label="Add animation" click="NemoJSX.addAnimation(event)"/>
			</s:VGroup>
		</s:NavigatorContent>
		
	</mx:ViewStack>
	
</csxs:CSExtension>