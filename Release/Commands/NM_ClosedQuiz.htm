<!-- MENU-LOCATION=NONE -->
<!DOCTYPE HTML SYSTEM "-//Macromedia//DWExtension layout-engine 5.0//dialog">

<html xmlns:MMString="http://www.macromedia.com/schemes/data/string/">
<head>

<!-- Copyright 2008 Adobe Systems Incorporated.  All rights reserved. -->
<script type="text/javascript" src="../Shared/Common/Scripts/dwscripts.js"></script>
<script type="text/javascript" src="../Shared/Common/Scripts/GridControlClass.js"></script>
<script type="text/javascript" src="../Shared/Controls/Scripts/TextField.js"></script>

<script>
var HELP_DOC = "http://olo.test.twenteacademy.nl/wiki/olo/Nm_closedquiz";
var GC_ITEMS     = new GridControl("LabelValuePairs");
var TF_GROUP_NAME = new TextField("","GroupName");

var RETURN_TAG='';
var ITEMS_GROUP_STR='';
var NM_BASENAME = "nm_ClosedQuiz";
var NM_LABELNAME = "Item";

function initializeUI()
{
  TF_GROUP_NAME.initializeUI();

  var radioLabel = NM_LABELNAME;

  var displayArr = new Array(new Array(radioLabel),
                             new Array(radioLabel)
                            );

  GC_ITEMS.setAll(displayArr);

  // generate unique radio group name, i.e.: "RadioGroup1"
  TF_GROUP_NAME.setValue( generatequizGroupName() );
  
  TF_GROUP_NAME.textControl.focus();  // set focus to radio group name
  TF_GROUP_NAME.textControl.select(); // select current group name

}

function displayHelp()
{
   // Replace the following call if you are modifying this file for your own use.
   dwscripts.displayDWHelp(HELP_DOC);
}

function commandButtons()
{
  return new Array(MM.BTN_OK,"clickedOK()",
                   MM.BTN_Cancel,"window.close()",
                   MM.BTN_Help,"displayHelp()");
}


function clickedOK()
{
  var labelValueArr = GC_ITEMS.getAll();
  var quizGroupName = TF_GROUP_NAME.getValue();
  var canApplyMsg = "";
  
  canApplyMsg = checkForLabelsAndValues(labelValueArr);
  
  if (!canApplyMsg && !quizGroupName)
    canApplyMsg = MM.MSG_NeedAradioGroupName;
  else
    quizGroupName = dwscripts.entityNameEncode(quizGroupName);
  
  if (canApplyMsg)
  {
    alert(canApplyMsg);
    return;
  }

  var selectValueEqualTo = ""; 
  var insertionStr = createItemsGroupString(quizGroupName,selectValueEqualTo,labelValueArr);
  ITEMS_GROUP_STR = insertionStr;
  RETURN_TAG = ITEMS_GROUP_STR;

  window.close();
}


function updateUI(theArg)
{
  // if user clicks the "-" button, delete the currently selected item
  if (theArg == "deleteButton")
  {
    GC_ITEMS.del();
  }
}


function generatequizGroupName()
{
  var baseName = NM_BASENAME;
  return dwscripts.getUniqueNameForTag("DIV",baseName);
}

function createItemsGroupString(groupName,selectValueEqualTo,labelValueArr)
{
  // labelValueArr is n items long, where n equal the number of radio buttons
  // Each nth item is an array in which [0] is the label and [1] is the value
  
  // Create a third item in the array that contains the checked string or
  // an empty string if there is no checked string
  //addCheckedInformation(labelValueArr);

  var nItems = labelValueArr.length;
  var i;
  var insertionStr = "";
  var paramObj = new Object();


  paramObj.ItemAnswer = false;
  paramObj.ItemTip = "";
  paramObj.ItemId = groupName + "_";
  paramObj.RadioName = groupName;
  paramObj.RadioId = "inp_" + groupName + "_";
  //var radioButtonStr = "";

  for (i=0;i<nItems;i++)
  {
    paramObj.RadioLabel = labelValueArr[i][0];

    insertionStr += getItemString(paramObj,i);
  }

  return ( addOuterTag(insertionStr,groupName) );
}


function addOuterTag(theStr,groupName)
{
  return "<div class='nm_ClosedQuiz' id='" + groupName + "'>" + theStr + "</div>";
}

function getItemString(paramObj,itemNum)
{
  var itemStr = '<div class="nm_qItem" id="@@ItemId@@" answer="@@ItemAnswer@@" tip="@@ItemTip@@"><input type="radio" name="@@RadioName@@" id="@@RadioId@@" /><label class="input" for="@@RadioIdFor@@">@@RadioLabel@@</label></div>';

  itemStr = itemStr.replace(/@@ItemId@@/,paramObj.ItemId + itemNum);
  itemStr = itemStr.replace(/@@ItemAnswer@@/,paramObj.ItemAnswer);
  itemStr = itemStr.replace(/@@ItemTip@@/,paramObj.ItemTip);
  itemStr = itemStr.replace(/@@RadioName@@/,paramObj.RadioName);
  itemStr = itemStr.replace(/@@RadioValue@@/,paramObj.RadioValue);
  itemStr = itemStr.replace(/@@RadioId@@/,paramObj.RadioId + itemNum);
  itemStr = itemStr.replace(/@@RadioIdFor@@/,paramObj.RadioId + itemNum);
  itemStr = itemStr.replace(/@@RadioLabel@@/,paramObj.RadioLabel);

  return itemStr;
}


function checkForLabelsAndValues(theArr)
{
  var retVal = "";
  var nItems = theArr.length;
  var i;
  
  if (!nItems || nItems == 0)
  {
    retVal = "A quiz contains at least one item.";
  }
  
  if (!retVal)
  {
    for (i=0;i<nItems;i++)
    {
      if (theArr[i][0] == "")
      {
        retVal = "You did not specify a label.";
        break;
      }
    }
  }
  
  return retVal;
}



//---------------     API FUNCTIONS    ---------------

function isDOMRequired()
{
  // Return false, indicating that this object is available in code view.
  return false;
}

function createComponentStr()
{
  return RETURN_TAG;
}

</script>


<title>Nemo - Insert a closed quiz</title>
<link href="../fields.css" rel="stylesheet" type="text/css">
</head>
<body onLoad="initializeUI()">
<form>
  <table border="0">
    <tr>
      <td align="right" nowrap>Quiz name</td>
      <td nowrap>
        <input name="GroupName" type="text" class="basicTextField">
      </td>
    </tr>
    <tr>
      <td align="right" nowrap>Items</td>
      <td nowrap>
        <input type="image" src="../Shared/MM/Images/btnAdd.gif" onClick="GC_ITEMS.add(new Array('Item'));focus(this)">
        <input type="image" src="../Shared/MM/Images/btnDel.gif" onClick="updateUI('deleteButton');focus(this)">
        <img src="../Shared/MM/Images/transparent.gif" width="183" height="23">
        <input type="image" src="../Shared/MM/Images/btnUp.gif" onClick="GC_ITEMS.moveUp();focus(this)">
        <input type="image" src="../Shared/MM/Images/btnDown.gif" onClick="GC_ITEMS.moveDown();focus(this)">
      </td>
    </tr>
    <tr>
      <td align="right" nowrap></td>
      <td nowrap>
        <select name="LabelValuePairs" style="width:280px;" type=mmparameterlist columns="Label" columnWidths="140" size="5">
        </select>
      </td>
    </tr>
  </table>
</form>
</body>
</html>